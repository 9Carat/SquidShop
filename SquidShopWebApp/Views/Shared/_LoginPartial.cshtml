@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json;
@using SquidShopWebApp.Services.IServices;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IUserService _userService


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    string name = User.Identity.Name;
    var userId = await UserManager.GetUserAsync(User);
    var apiResponse = await _userService.GetByFkIdAsync<ApiResponse>(userId.Id);
    var user = JsonConvert.DeserializeObject<User>(Convert.ToString(apiResponse.Result));
    @if (apiResponse != null && user != null)
    {
        name = user.FirstName;
    }
    

    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Login
        </a>
        <ul class="dropdown-menu">
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        </ul>
    </li>
}   
</ul>
